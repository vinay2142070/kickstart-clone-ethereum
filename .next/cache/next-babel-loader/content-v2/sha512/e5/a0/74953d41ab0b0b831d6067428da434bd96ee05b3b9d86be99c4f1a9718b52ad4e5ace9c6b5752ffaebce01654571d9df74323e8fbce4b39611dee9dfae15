{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/callisto/Documents/Udemy/blockchain/kickstart-ethereum-app/kickstart/pages/campaigns/show.js\";\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: \"Address of Manager\",\n      description: \"The manager created this campaign and can create requests to withdraw money\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute at least this much wei to become an approver\"\n    }, {\n      header: requestsCount,\n      meta: \"Number of Requests\",\n      description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n    }, {\n      header: approversCount,\n      meta: \"Number of Approvers\",\n      description: \"Number of people who have already donated to this campaign\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign Balance (ether)\",\n      description: \"The balance is how much money this campaign has left to spend.\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Campaign Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 10,\n            children: this.renderCards()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 6,\n            children: /*#__PURE__*/_jsxDEV(ContributeForm, {\n              address: this.props.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              route: `/campaigns/${this.props.address}/requests`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  primary: true,\n                  children: \"View Requests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/callisto/Documents/Udemy/blockchain/kickstart-ethereum-app/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","ContributeForm","Link","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n\n        const summary = await campaign.methods.getSummary().call();\n\n        return {\n            address: props.query.address,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4],\n        };\n    }\n\n    renderCards() {\n        const {\n            balance,\n            manager,\n            minimumContribution,\n            requestsCount,\n            approversCount,\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: \"Address of Manager\",\n                description:\n                    \"The manager created this campaign and can create requests to withdraw money\",\n                style: { overflowWrap: \"break-word\" },\n            },\n            {\n                header: minimumContribution,\n                meta: \"Minimum Contribution (wei)\",\n                description:\n                    \"You must contribute at least this much wei to become an approver\",\n            },\n            {\n                header: requestsCount,\n                meta: \"Number of Requests\",\n                description:\n                    \"A request tries to withdraw money from the contract. Requests must be approved by approvers\",\n            },\n            {\n                header: approversCount,\n                meta: \"Number of Approvers\",\n                description:\n                    \"Number of people who have already donated to this campaign\",\n            },\n            {\n                header: web3.utils.fromWei(balance, \"ether\"),\n                meta: \"Campaign Balance (ether)\",\n                description:\n                    \"The balance is how much money this campaign has left to spend.\",\n            },\n        ];\n\n        return <Card.Group items={items} />;\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h3>Campaign Show</h3>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n                        <Grid.Column width={6}>\n                            <ContributeForm address={this.props.address} />\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Link route={`/campaigns/${this.props.address}/requests`}>\n                                <a>\n                                    <Button primary>View Requests</Button>\n                                </a>\n                            </Link>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}