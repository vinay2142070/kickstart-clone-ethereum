{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/callisto/Documents/Udemy/blockchain/kickstart-ethereum-app/kickstart/components/RequestRow.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      disabled: request.complete,\n      positive: readyToFinalize && !request.complete,\n      children: [/*#__PURE__*/_jsxDEV(Cell, {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: web3.utils.fromWei(request.value, \"ether\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.recipient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: [request.approvalCount, \"/\", approversCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          basic: true,\n          onClick: this.onApprove,\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          basic: true,\n          onClick: this.onFinalize,\n          children: \"Finalize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/callisto/Documents/Udemy/blockchain/kickstart-ethereum-app/kickstart/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient","onApprove","onFinalize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n    onApprove = async () => {\n        const campaign = Campaign(this.props.address);\n\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.approveRequest(this.props.id).send({\n            from: accounts[0],\n        });\n    };\n\n    onFinalize = async () => {\n        const campaign = Campaign(this.props.address);\n\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.finalizeRequest(this.props.id).send({\n            from: accounts[0],\n        });\n    };\n\n    render() {\n        const { Row, Cell } = Table;\n        const { id, request, approversCount } = this.props;\n        const readyToFinalize = request.approvalCount > approversCount / 2;\n\n        return (\n            <Row\n                disabled={request.complete}\n                positive={readyToFinalize && !request.complete}\n            >\n                <Cell>{id}</Cell>\n                <Cell>{request.description}</Cell>\n                <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n                <Cell>{request.recipient}</Cell>\n                <Cell>\n                    {request.approvalCount}/{approversCount}\n                </Cell>\n                <Cell>\n                    {request.complete ? null : (\n                        <Button color=\"green\" basic onClick={this.onApprove}>\n                            Approve\n                        </Button>\n                    )}\n                </Cell>\n                <Cell>\n                    {request.complete ? null : (\n                        <Button color=\"teal\" basic onClick={this.onFinalize}>\n                            Finalize\n                        </Button>\n                    )}\n                </Cell>\n            </Row>\n        );\n    }\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}